'use client';
import { AccordionGroup, Text } from '@once-ui-system/core';
import Script from 'next/script';

const faqItems = [
  {
    title: "Какво е AI-ориентирано WordPress SEO?",
    content: (
      <Text>
        AI-ориентираното WordPress SEO е съвременен подход, който комбинира 
        техническа оптимизация, автоматизация и ясно структурирано съдържание. 
        Целта е информацията да бъде лесно разбираема както от търсачките, така и от AI системите. 
        Така съдържанието се класира по-добре в традиционните SERP и се извлича в AI Overviews. 
        Този метод гарантира по-голяма видимост и устойчиво онлайн присъствие.
      </Text>
    )
  },
  {
    title: "Каква е ролята на структурирани данни (Schema.org) в Generative SEO?",
    content: (
      <Text>
        Структурираните данни като Article, FAQPage, Breadcrumb или Product/Service 
        са ключови за правилното разбиране на контекста от търсачките и AI. 
        Те дават сигнал за типа съдържание и неговата цел, което улеснява алгоритмите да го класифицират. 
        При автоматичното им внедряване страниците придобиват по-добра видимост в SERP и в Overviews. 
        Това повишава доверието към сайта и вероятността той да бъде избран като релевантен източник.
      </Text>
    )
  },
  {
    title: "Защо автоматизацията е ключова в WordPress SEO?",
    content: (
      <Text>
        Автоматизацията позволява бързо и последователно изпълнение на важни SEO задачи. 
        Тя обхваща генериране на мета заглавия и описания, внедряване на вътрешни линкове и Schema. 
        Персонализираните WordPress плъгини елиминират повтарящи се процеси и намаляват човешките грешки. 
        Така се спестява време и се гарантира, че всяка страница е оптимизирана според най-добрите практики. 
        В резултат сайтът става по-устойчив и конкурентоспособен в дългосрочен план.
      </Text>
    )
  },
  {
    title: "Как Generative SEO увеличава шанса за присъствие в AI Overviews?",
    content: (
      <Text>
        Generative SEO поставя акцент върху ясно структурирани текстове, кратки резюмета и често задавани въпроси. 
        Така съдържанието се представя в лесно извлекаем формат за AI системите. 
        Добавянето на списъци и ясни параграфи прави информацията по-достъпна за алгоритмите. 
        В комбинация със Schema данни това увеличава вероятността сайтът да бъде показан в Overviews. 
        Това води до повече органичен трафик и доверие от потребителите.
      </Text>
    )
  },
  {
    title: "Как протича процесът по WordPress SEO с автоматизация?",
    content: (
      <Text>
        Процесът започва с подробен одит – технически, съдържателен и семантичен. 
        След това се правят настройки на SEO плъгини, sitemap и robots.txt за правилна индексация. 
        На следващ етап се внедряват автоматизации чрез персонализирани плъгини и скриптове. 
        Съдържанието се структурира според H-йерархия и се оптимизира за AI и търсачки. 
        Накрая се извършва мониторинг чрез валидиране на schema, Core Web Vitals и Crawl статус.
      </Text>
    )
  },
  {
    title: "Може ли AI да замести човешкия фактор в SEO?",
    content: (
      <Text>
        AI е мощен инструмент, който ускорява анализа и автоматизира повтарящи се процеси. 
        Той може да предложи оптимизации и да създаде структури, които улесняват работата на SEO специалиста. 
        Въпреки това, AI не може да замести напълно човешката креативност, стратегическо мислене и контекстуално разбиране. 
        Истински добри резултати се постигат, когато AI и експертът работят заедно. 
        AI е помощник, а не заместител — винаги остава място за човешка намеса.
      </Text>
    )
  }
];

export default function WordpressSEOFAQ() {
  const faqSchema = {
    "@context": "https://schema.org",
    "@type": "FAQPage",
    "mainEntity": faqItems.map(item => ({
      "@type": "Question",
      "name": item.title,
      "acceptedAnswer": {
        "@type": "Answer",
        "text": typeof item.content === "string"
          ? item.content
          : (item.content.props.children as string) || ""
      }
    }))
  };

  return (
    <>
      <AccordionGroup items={faqItems} />
      <Script
        id="wordpress-seo-faq-schema"
        type="application/ld+json"
        dangerouslySetInnerHTML={{ __html: JSON.stringify(faqSchema) }}
      />
    </>
  );
}
